using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using GroundHouse.Models;
using GroundHouse.ViewModels;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Mvc;

namespace GroundHouse.Controllers//it is the controller who handles the http request and gives http response
{//actions are just methods who do the do
    public class HomeController : Controller
    {
        private readonly IHouseRepository _houseRepository;
        private readonly IHostingEnvironment hostingEnvironment;

        public HomeController(IHouseRepository houseRepository,
                              IHostingEnvironment hostingEnvironment)
        {
            _houseRepository = houseRepository;
            this.hostingEnvironment = hostingEnvironment;
        }

        [HttpGet]
        public ViewResult Create()
        {
            return View();
        }

        [HttpPost]
        public IActionResult Create(HouseCreateViewModel model)
        {
            if (ModelState.IsValid)
            {
                //for file uploading
                string uniqueFileName = null;
                if (model.Photo != null)
                {
                    string uploadsFolder = Path.Combine(hostingEnvironment.WebRootPath, "images");
                    uniqueFileName = Guid.NewGuid().ToString() + "_" + model.Photo.FileName;
                    string filePath = Path.Combine(uploadsFolder, uniqueFileName);
                    model.Photo.CopyTo(new FileStream(filePath, FileMode.Create));
                }
                House newHouse = new House()//id is generated by ef core
                { 
                    Address = model.Address,
                    OwnerEmail = model.OwnerEmail,
                    Type = model.Type,
                    PhotoPath = uniqueFileName
                };

                _houseRepository.Add(newHouse);
                return RedirectToAction("details", new { id = newHouse.Id });
            }

            return View();
        }

        public IActionResult Details(int? id)
        {
            HomeDetailsViewModel homeDetailsViewModel = new HomeDetailsViewModel()
            {
                House = _houseRepository.GetHouse(id ?? 1),
                PageTitle = "Details page"
            };
            return View(homeDetailsViewModel);
        }

        public IActionResult Index()
        {
            var model = _houseRepository.GetAllHouses();
            return View(model);
        }        
    }
}
