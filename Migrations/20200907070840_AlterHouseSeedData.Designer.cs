// <auto-generated />
using System;
using GroundHouse.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GroundHouse.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200907070840_AlterHouseSeedData")]
    partial class AlterHouseSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GroundHouse.Models.House", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Price")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Houses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "DefaultAddress",
                            OwnerEmail = "default@gmail.com",
                            Price = 10000,
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "DefaultAddress2",
                            OwnerEmail = "default2@gmail.com",
                            Price = 20000,
                            Type = 2
                        },
                        new
                        {
                            Id = 3,
                            Address = "DefaultAddress3",
                            OwnerEmail = "default3@gmail.com",
                            Price = 30000,
                            Type = 3
                        },
                        new
                        {
                            Id = 4,
                            Address = "DefaultAddress4",
                            OwnerEmail = "default4@gmail.com",
                            Price = 40000,
                            Type = 3
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
